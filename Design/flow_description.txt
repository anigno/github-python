message data sending [data bytes] to ip-endpoint
    generate message id
    generate partitions [message id][part number][total parts][part data bytes] as [partition data]
    add crc [crc][partition data] as [crc partition data]
    add partitions to reliability manager sent-parts by: message id:part number:[crc partition data],resend-left, next resend timeout
    send all [crc partition data] to ip-endpoint
message data received [crc partition data] from sender-ip-endpoint
    split to [crc][partition data]
    verify crc?
    if crc wrong ignore and return
    extract [message id][part number][total parts][part data bytes] from [partition data]
    send ack-message to sender-ip-endpoint (ack-message: message id,part number)
    add receive part to partition manager received-parts by message id:part number:[partition data]
    if received [message id] [total parts] exists in received-parts, raise event message data received and remove from received-parts
ack message received
    reliability manager remove part from sent-parts
    if no parts for message id left raise event message sent successfully
reliability manager old message parts search to raise message send fail
partition manager old message parts timeout to clear old message parts for un received messages



udp communicator
partition manager
reliability manager
partition helper





